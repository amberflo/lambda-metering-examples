AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: Lambda Metering Examples

Globals:
  Function:
    Runtime: nodejs16.x
    Architectures: [arm64]
    MemorySize: 512

Resources:

  mainApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: Metering Examples
      Description: Lambda Metering Examples
      StageName: dev
      OpenApiVersion: 3.0.1
      EndpointConfiguration:
        Type: REGIONAL
      MethodSettings:
        - ResourcePath: '/*'
          HttpMethod: '*'
          LoggingLevel: ERROR

  mainApiLambda:
    Type: AWS::Serverless::Function
    Properties:
      Handler: ./lambda/api.handler
      CodeUri: .
      Description: Lambda Metering Examples - API
      Timeout: 30
      FunctionName: metering-example-api-v1-lambda
      Policies:
        - AWSLambdaBasicExecutionRole
      Environment:
        Variables:
          METER_API_NAME: ''
          CUSTOMER_ID: ''
          AMBERFLO_API_KEY: ''
          ACCESS_KEY: ''
          SECRET_KEY: ''
          INGEST_BUCKET_NAME: ''
          INGEST_QUEUE_URL: ''

  mainApiLambdaLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/${mainApiLambda}"

  cwSubscriberLambda:
    Type: AWS::Serverless::Function
    Properties:
      Handler: ./lambda/cw-subscriber.handler
      CodeUri: .
      Description: Lambda Metering Examples - CW Subscriber
      Timeout: 30
      FunctionName: metering-example-cw-subscriber-v1-lambda
      Policies:
        - AWSLambdaBasicExecutionRole
      Events:
        cwLogs:
          Type: CloudWatchLogs
          Properties:
            LogGroupName: !Ref mainApiLambdaLogGroup
            FilterPattern: "meter_record_for_cw"
      Environment:
        Variables:
          AMBERFLO_API_KEY: ''
          ACCESS_KEY: ''
          SECRET_KEY: ''
          INGEST_BUCKET_NAME: ''
          INGEST_QUEUE_URL: ''

  stream:
    Type: AWS::Kinesis::Stream
    Properties:
      ShardCount: 1

  streamSubscriberLambda:
    Type: AWS::Serverless::Function
    Properties:
      Handler: ./lambda/stream-subscriber.handler
      CodeUri: .
      Description: Lambda Metering Examples - Stream Subscriber
      Timeout: 30
      FunctionName: metering-example-stream-subscriber-v1-lambda
      Policies:
        - AWSLambdaBasicExecutionRole
      Events:
        stream:
          Type: Kinesis
          Properties:
            Stream: !GetAtt stream.Arn
            BatchSize: 100
            StartingPosition: LATEST
      Environment:
        Variables:
          AMBERFLO_API_KEY: ''
          ACCESS_KEY: ''
          SECRET_KEY: ''
          INGEST_BUCKET_NAME: ''
          INGEST_QUEUE_URL: ''

  streamSubscriptionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          Effect: Allow
          Principal:
            Service: !Sub 'logs.${AWS::Region}.amazonaws.com'
          Action: sts:AssumeRole
          Condition:
              StringLike:
                aws:SourceArn: !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*'
      Policies:
        - PolicyName: streamSubscriptionRolePolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: kinesis:PutRecord
                Resource: !GetAtt stream.Arn

  streamSubscriptionFilter:
    Type: AWS::Logs::SubscriptionFilter
    Properties:
      RoleArn: !GetAtt streamSubscriptionRole.Arn
      LogGroupName: !Ref mainApiLambdaLogGroup
      FilterPattern: "meter_record_for_stream"
      DestinationArn: !GetAtt stream.Arn

Outputs:
  mainApiLambda:
    Description: API Lambda
    Value: !GetAtt mainApiLambda.Arn

  cwSubscriberLambda:
    Description: CW Subscriber Lambda
    Value: !GetAtt cwSubscriberLambda.Arn

  streamSubscriberLambda:
    Description: Stream Subscriber Lambda
    Value: !GetAtt streamSubscriberLambda.Arn

  mainApi:
    Description: "Main API"
    Value: !Sub "https://${mainApi}.execute-api.${AWS::Region}.amazonaws.com/"
